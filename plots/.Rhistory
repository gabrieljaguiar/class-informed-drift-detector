point.padding = 0.5,
size = 3,
segment.color = 'grey50') + theme_bw()
g = g + theme(panel.grid.major = element_blank(), legend.position = "none", plot.title = element_text(hjust = 0.5)) +
#ggtitle("Multi-class experiments - Kappa vs Runtime") +
ylab("Delay Rank") + xlab("F1 Rank") +
scale_y_continuous(limits=c(1,12),breaks=seq(1, 121,by=2)) +
scale_x_continuous(limits=c(1,12),breaks=seq(1, 12,by=2))
ggsave("scatter_acc_HT.pdf", g, width = 8, height = 6.5)
library(Rcpp)
library(ggplot2)
library(reshape2)
library(ggrepel)
data <- read.csv("../metric_agg/rank_metrics_nb.csv")
data$balance = data$acc_rank  * data$gmean_rank
g = ggplot(data,  aes(x=acc_rank, y=gmean_rank))
g = g + geom_point(size=3, aes(x=acc_rank, y=gmean_rank, colour=balance)) #Without size
#g = g + geom_point( aes(x=Kappa, y=Gmean, colour=balance, size=1/balance)) #WithSize
g = g + scale_colour_gradient2(low="green",mid="yellow", high="red", midpoint = mean(data$balance))
g = g + geom_label_repel(aes(label = dd),
box.padding   = 0.35,
point.padding = 0.5,
size = 3,
segment.color = 'grey50') + theme_bw()
g = g + theme(panel.grid.major = element_blank(), legend.position = "none", plot.title = element_text(hjust = 0.5)) +
#ggtitle("Multi-class experiments - Kappa vs Runtime") +
ylab("Delay Rank") + xlab("F1 Rank") +
scale_y_continuous(limits=c(1,12),breaks=seq(1, 121,by=2)) +
scale_x_continuous(limits=c(1,12),breaks=seq(1, 12,by=2))
ggsave("scatter_acc_NB.pdf", g, width = 8, height = 6.5)
library(Rcpp)
library(ggplot2)
library(reshape2)
library(ggrepel)
data <- read.csv("../metric_agg/rank_metrics_nb.csv")
data$balance = data$acc_rank  * data$gmean_rank
g = ggplot(data,  aes(x=acc_rank, y=gmean_rank))
g = g + geom_point(size=3, aes(x=acc_rank, y=gmean_rank, colour=balance)) #Without size
#g = g + geom_point( aes(x=Kappa, y=Gmean, colour=balance, size=1/balance)) #WithSize
g = g + scale_colour_gradient2(low="green",mid="yellow", high="red", midpoint = mean(data$balance))
g = g + geom_label_repel(aes(label = dd),
box.padding   = 0.35,
point.padding = 0.5,
size = 3,
segment.color = 'grey50') + theme_bw()
g = g + theme(panel.grid.major = element_blank(), legend.position = "none", plot.title = element_text(hjust = 0.5)) +
#ggtitle("Multi-class experiments - Kappa vs Runtime") +
ylab("G-Mean Rank") + xlab("Accuracy Rank") +
scale_y_continuous(limits=c(1,12),breaks=seq(1, 121,by=2)) +
scale_x_continuous(limits=c(1,12),breaks=seq(1, 12,by=2))
ggsave("scatter_acc_NB.pdf", g, width = 8, height = 6.5)
library(Rcpp)
library(ggplot2)
library(reshape2)
library(ggrepel)
data <- read.csv("../metric_agg/rank_metrics_ht.csv")
data$balance = data$acc_rank  * data$gmean_rank
g = ggplot(data,  aes(x=acc_rank, y=gmean_rank))
g = g + geom_point(size=3, aes(x=acc_rank, y=gmean_rank, colour=balance)) #Without size
#g = g + geom_point( aes(x=Kappa, y=Gmean, colour=balance, size=1/balance)) #WithSize
g = g + scale_colour_gradient2(low="green",mid="yellow", high="red", midpoint = mean(data$balance))
g = g + geom_label_repel(aes(label = dd),
box.padding   = 0.35,
point.padding = 0.5,
size = 3,
segment.color = 'grey50') + theme_bw()
g = g + theme(panel.grid.major = element_blank(), legend.position = "none", plot.title = element_text(hjust = 0.5)) +
#ggtitle("Multi-class experiments - Kappa vs Runtime") +
ylab("G-Mean Rank") + xlab("Accuracy Rank") +
scale_y_continuous(limits=c(1,12),breaks=seq(1, 121,by=2)) +
scale_x_continuous(limits=c(1,12),breaks=seq(1, 12,by=2))
ggsave("scatter_acc_HT.pdf", g, width = 8, height = 6.5)
stream_name <- paste0("concepts_prune_growth_new_branch_local_sudden_5")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
View(df)
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#
#df_filter <- df[df$class > 4,]
df_filter <- df
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class", "type"))
View(df_filter)
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value, color=type)) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme(legend.position = "none")
g
#
df_filter <- df[df$class %in% c(6,9),]
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=0, ymax=Inf),fill="gray", alpha=0.015) +
theme_bw() +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=0, ymax=Inf),fill="gray", alpha=0.015) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=Inf, ymax=Inf),fill="gray", alpha=0.015) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.015) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.2) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.1) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value)) +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
theme(legend.position = "none")
g
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
theme(legend.position = "none")
g
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#df_filter <- df
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
#15.10x3.76
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#df_filter <- df
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt[df_melt$class == 6]$class = bquote("Detected C"[1])
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#df_filter <- df
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt[df_melt$class == 6,]$class = bquote("Detected C"[1])
df_melt[df_melt$class == 6,]
df_melt[df_melt$class == 6,]$class
df_melt[df_melt$class == 6,]$class
df_melt[df_melt$class == 6,]$class = bquote("Detected C"[1])
df_melt[df_melt$class == 6,]$class <- bquote("Detected C"[1])
bquote("Detected C"[1])
df_melt[df_melt$class == 6,]$class <- bquote("Detected C"[1])
#
df_filter <- df[df$class %in% c(6,9),]
df_filter[df_filter$class == 6,]$class <- bquote("Detected C"[1])
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c(bquote("Detected C"[1]), bquote("Detected C"[2])))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c(bquote("C"[1]), bquote("C"[2])))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
View(df_melt)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
View(df_melt)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c(bquote("C"[1]), bquote("C"[2])))
View(df_melt)
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
#15.10x3.76
df_melt$variable
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$variable <- factor(df_melt$variable)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
#15.10x3.76
df_melt$variable
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$variable <- factor(df_melt$variable)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
df_melt$variable <- factor(df_melt$variable, labels=c("Eigenvalues", "IQ Range", "Kurtosis", "Mean", "Median", "STD", "T Mean"))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
#15.10x3.76
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "kurtosis.mean", "mean.mean",
"median.mean", "sd.mean", "skewess.mean", "t_mean.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$variable <- factor(df_melt$variable)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
df_melt$variable <- factor(df_melt$variable, labels=c("Eigenvalues", "IQ Range", "Kurtosis", "Mean", "Median", "STD", "T Mean"))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_point(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
#15.10x3.76
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "mean.mean",
"median.mean", "sd.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$variable <- factor(df_melt$variable)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
df_melt$variable <- factor(df_melt$variable, labels=c("Eigenvalues", "IQ Range", "Mean", "Median", "STD", "T Mean"))
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "mean.mean",
"median.mean", "sd.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$variable <- factor(df_melt$variable)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
df_melt$variable <- factor(df_melt$variable, labels=c("Eigenvalues", "IQ Range", "Mean", "Median", "STD"))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_point(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.08) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
g
#15.10x3.76
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "mean.mean",
"median.mean", "sd.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$variable <- factor(df_melt$variable)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
df_melt$variable <- factor(df_melt$variable, labels=c("Eigenvalues", "IQ Range", "Mean", "Median", "STD"))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_point(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.05) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
ggsave("detection_features.pdf", plot = g, height = 4, width=11)
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "mean.mean",
"median.mean", "sd.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$variable <- factor(df_melt$variable)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
df_melt$variable <- factor(df_melt$variable, labels=c("Eigenvalues", "IQ Range", "Mean", "Median", "STD"))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_point(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.05) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
ggsave("detection_features.pdf", plot = g, height = 4, width=11)
library(ggplot2)
library(reshape2)
library(dplyr)
stream_name <- paste0("concepts_multi_class_local_swap_cluster_ds_5000_c_10_ca_2_f_10_1_1")
df <- read.csv(paste0("../output/concepts/", stream_name, ".csv"))
#
df_filter <- df[df$class %in% c(6,9),]
#t(apply(df_filter, 1, rollmean, 3))
selected_features <- c("eigenvalues.mean" , "iq_range.mean", "mean.mean",
"median.mean", "sd.mean")
#df[,selected_features]
df_melt <- melt(df_filter, id.vars = c("index", "class"))
#
df_melt <- df_melt[df_melt$variable %in% selected_features,]
#df_melt <- df_melt[df_melt$type == "concept",]
df_melt$variable <- factor(df_melt$variable)
df_melt$class <- factor(df_melt$class, levels=c(6,9), labels=c("C1", "C2"))
df_melt$variable <- factor(df_melt$variable, labels=c("Eigenvalues", "IQ Range", "Mean", "Median", "STD"))
g <- ggplot(data = df_melt) + geom_line(aes(x=index, y=value), color="#7ea7d9") +
geom_point(aes(x=index, y=value), color="#7ea7d9") +
geom_rect(aes(xmin = 8,xmax = 12,  ymin=-Inf, ymax=Inf),fill="gray", alpha=0.05) +
ggh4x::facet_grid2(class~variable,scales = "free_y", independent = "y") +
theme_bw() +
ylab("") +
xlab("") +
theme(legend.position = "none")
ggsave("detection_features.pdf", plot = g, height = 4, width=11)
#15.10x3.76
