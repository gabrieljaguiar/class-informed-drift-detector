"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=12)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=12, face = "bold")) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=12, face = "bold"),
axis.title.y = element_text(size=15)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=12, face = "bold"),
axis.title.y = element_text(size=15)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6.5, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=15, face = "bold"),
axis.title.y = element_text(size=18)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6.5, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=16, face = "bold"),
axis.title.y = element_text(size=18)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6.5, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=16),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=16, face = "bold"),
axis.title.y = element_text(size=18)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6.5, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=16),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=16, face = "bold"),
axis.title.y = element_text(size=18)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=6.5, height=4)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=16),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=16, face = "bold"),
axis.title.y = element_text(size=18)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=8, height=6)
library(ggplot2)
library(reshape2)
library(ggforce)
library(RColorBrewer)
library(paletteer)
df <- read.csv("../metric_agg/agg_class_id_results.csv")
df_melt <- melt(df, id.vars=c("n_class", "class_affected"))
df_melt$n_class <- as.factor(df_melt$n_class)
df_melt$variable <- factor(paste(df_melt$class_affected, df_melt$variable, sep="_"), levels=c("1_tp", "2_tp", "1_fn","2_fn"))
df_melt <- df_melt[c("n_class", "variable", "value")]
g <- ggplot(df_melt, aes(y=n_class, x=value)) +
geom_bar(aes(fill=variable),
stat="identity",
position=position_fill(reverse = TRUE),
colour="black") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size=16),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=16, face = "bold"),
axis.title.y = element_text(size=18)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_discrete(expand = c(0.15,0.15)) +
scale_fill_manual(values=c("#1a9641",
"#a6d96a",
"#fdae61",
"#d7191c"),
name="Metric",
labels=c( bquote("Detected C"[1]), bquote("Detected C"[2]),
bquote("Not detected C"[1]),bquote("Not detected C"[2])),
expand=c(0,0)) +
labs(x="", y="# of Classes")
g
ggsave("class_identification_bar.pdf", width=8, height=6)
df <- read.csv("../output/HT_RT_GT_swap_cluster_global_gradual_5.csv")
View(df)
View(df)
View(df)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggpubr)
df <- read.csv("../output/HT_RT_GT_swap_cluster_global_gradual_5.csv")
View(df)
View(df)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggpubr)
df_gt <- read.csv("../output/HT_RT_GT_swap_cluster_global_gradual_5.csv")
df_adwin <- read.csv("../output/HT_RT_ADWIN_swap_cluster_global_gradual_5.csv")
df_gt <- df_gt[c("idx", "accuracy", "class_4")]
df_adwin <- df_adwin[c("idx", "accuracy", "class_4")]
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggpubr)
df_gt <- read.csv("../output/HT_RT_GT_swap_cluster_global_gradual_5.csv")
df_adwin <- read.csv("../output/HT_RT_ADWIN_swap_cluster_global_gradual_5.csv")
df_gt <- df_gt[c("idx", "accuracy", "class_4")]
df_adwin <- df_adwin[c("idx", "accuracy", "class_4")]
View(df_adwin)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggpubr)
df_gt <- read.csv("../output/HT_RT_GT_swap_cluster_global_gradual_5.csv")
df_adwin <- read.csv("../output/HT_RT_ADWIN_swap_cluster_global_gradual_5.csv")
df_gt <- df_gt[c("idx", "accuracy", "class_4")]
df_adwin <- df_adwin[c("idx", "accuracy", "class_4")]
df_gt$detector <- "GT"
df_adwin$detector <- "ADWIN"
df <- rbind(df_gt, df_adwin)
ggplot(df, aes(x=idx, y=accuracy)) +
geom_line(aes(color=detector))
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggpubr)
df_gt <- read.csv("../output/HT_RT_GT_swap_cluster_global_gradual_5.csv")
df_adwin <- read.csv("../output/HT_RT_NO_DRIFT_swap_cluster_global_gradual_5.csv")
df_gt <- df_gt[c("idx", "accuracy", "class_4")]
df_adwin <- df_adwin[c("idx", "accuracy", "class_4")]
df_gt$detector <- "GT"
df_adwin$detector <- "ADWIN"
df <- rbind(df_gt, df_adwin)
# n_classes = c(3,5,10,15,20)
ggplot(df, aes(x=idx, y=accuracy)) +
geom_line(aes(color=detector))
# files <- list.files("../datasets/", pattern="*.csv")
#
# for (f in files){
#
#   ciddm <- read.csv(paste0("../output/alerts_", f))
#
#   ht_acc <- read.csv(paste0("../output/HT_ADWIN_",f))
#   ht_adwin <- read.csv(paste0("../output/drift_alerts_HT_ADWIN_",f))
#   #nb_adwin <- read.csv(paste0("../output/drift_alerts_NB_ADWIN_",f))
#
#   columns <- c("idx", "accuracy")
#
#   acc_df <- ht_acc[, columns]
#
#   acc_melt <- melt(acc_df, id.vars="idx")
#
#   g_ciddm <- ggplot(acc_melt, aes(x=idx, y=value)) +
#     geom_line(aes(color=variable)) +
#     scale_x_continuous(labels=scales::comma) +
#     geom_vline(xintercept = c(100000, 200000, 300000),
#                color="black", alpha=0.8, linetype=3, linewidth=1) +
#     geom_vline(xintercept = ciddm$idx,
#                color="red", alpha=0.8, linetype=3, linewidth=1) +
#     ggtitle("CIDDM") +
#     theme_bw()
#
#   g_adwin <- ggplot(acc_melt, aes(x=idx, y=value)) +
#     geom_line(aes(color=variable)) +
#     scale_x_continuous(labels=scales::comma) +
#     geom_vline(xintercept = c(100000, 200000, 300000),
#                color="black", alpha=0.8, linetype=3, linewidth=1) +
#     geom_vline(xintercept = ht_adwin$idx,
#                color="red", alpha=0.8, linetype=3, linewidth=1) +
#     ggtitle("ADWIN") +
#     theme_bw()
#
#
#   figure <- ggarrange(g_ciddm, g_adwin,
#                       labels = c("", ""),
#                       ncol = 2, nrow = 1)
#
#
#   ggsave(paste0(f,".pdf"),width=16.77, height=3)
#
# }
